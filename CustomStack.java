import java.util.Stack;public class CustomStack {    Stack<Integer> stack;    Stack<Integer> minimum;    int min = Integer.MAX_VALUE;    public CustomStack(){        this.stack = new Stack<>();        this.minimum = new Stack<>();    }    private void push(int x){        if(x <= min){            min = x;            minimum.push(x);        }        stack.push(x);    }    private void pop(){        if(!stack.isEmpty()){            int temp = stack.pop();            if(temp == min)                minimum.pop();            if(minimum.isEmpty())                min = Integer.MAX_VALUE;            else                min = minimum.peek();        }    }    private int getMin(){        if(!stack.isEmpty())             return min;        return -1;    }    private int top(){        if(!stack.isEmpty())            return stack.peek();        return -1;    }    public static void main(String[] args) {        CustomStack obj = new CustomStack();        obj.push(3);        obj.push(5);        obj.push(1);        System.out.println(obj.getMin());        obj.pop();        System.out.println(obj.getMin());        obj.pop();    }}