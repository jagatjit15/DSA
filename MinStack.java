import java.util.Stack;public class MinStack {    Stack<Integer> stack;    Stack<Integer> minStack;    public MinStack() {        stack = new Stack<>();        minStack = new Stack<>();    }    public void push(int x) {        stack.push(x);        if (minStack.isEmpty() || x <= minStack.peek()) {            minStack.push(x);        }    }    public void pop() {        if (stack.isEmpty()) {            return;        }        int x = stack.pop();        if (x == minStack.peek()) {            minStack.pop();        }    }    public int top() {        if (stack.isEmpty()) {            return -1;        }        return stack.peek();    }    public int getMin() {        if (minStack.isEmpty()) {            return -1;        }        return minStack.peek();    }    public static void main(String[] args) {        MinStack s = new MinStack();        s.push(3);        s.push(5);        s.push(1);        System.out.println(s.getMin());        s.pop();        System.out.println(s.getMin());        s.pop();        System.out.println(s.getMin());    }}