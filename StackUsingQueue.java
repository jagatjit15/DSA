import java.util.LinkedList;import java.util.Queue;public class StackUsingQueue {   private Queue q1;   private Queue q2;    public StackUsingQueue(){        this.q1 = new LinkedList<>();        this.q2 = new LinkedList<>();    }    public void pushElement(int num){      if(q1.isEmpty()){          q1.add(num);          while(!q2.isEmpty()){              q1.add(q2.poll());          }      }else{          q2.add(num);          while(!q1.isEmpty()){              q2.add(q1.poll());          }      }    }    public int pop(){        if(q1.isEmpty() && q2.isEmpty())            return -1;        if(!q1.isEmpty()){            return (int) q1.remove();        }        else{            return (int) q2.remove();        }    }    public int peek(){        if(q1.isEmpty() && q2.isEmpty())            return -1;        if(!q1.isEmpty()){            return (int) q1.peek();        }        else{            return (int) q2.peek();        }    }    public int length(){        return q1.size();    }    public boolean empty(){        return q1.isEmpty();    }    public static void main(String[] args) {        StackUsingQueue stack = new StackUsingQueue();        System.out.println(stack.peek());        System.out.println(stack.pop());        stack.pushElement(1);        stack.pushElement(2);        System.out.println(stack.pop());        stack.pushElement(4);        stack.pushElement(5);        System.out.println(stack.peek());        System.out.println(stack.empty());    }}