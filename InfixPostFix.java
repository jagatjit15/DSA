import java.util.Scanner;import java.util.Stack;public class InfixPostFix {    public static boolean isCharacter(char c){        if(c == '+' || c == '-' || c == '/' ||           c == '*' || c == '^' || c == '(' || c == ')'){            return false;        }        return true;    }    public static int priority(char c){        if(c == '^') return 3;        else if (c == '*' || c == '/')            return 2;        else if(c == '+' || c == '-')            return 1;        return -1;    }    public static String inFixPostFix(String str){        StringBuilder res = new StringBuilder();        Stack<Character> st = new Stack<>();        for(char c : str.toCharArray()){            if(isCharacter(c)) res.append(c);            else if(c == '(') st.push(c);            else if (c == ')'){                while(!st.isEmpty() && st.peek() != '('){                    res.append(st.pop());                }                if(st.isEmpty()) return "wrong operation";                st.pop();            }            else{                while(!st.isEmpty() && priority(st.peek()) >= priority(c)){                    res.append(st.pop());                }                st.push(c);            }        }        while(!st.isEmpty()){            res.append(st.pop());        }        return res.toString();    }    public static void main(String[] args) {        Scanner sc = new Scanner(System.in);        String expression = sc.next();        System.out.println(inFixPostFix(expression));    }}